{
    "news": [
        {
            "id": "0", 
            "title": "硕士研究生乔塬心在CCF C类国际会议SMC发表最新研究成果——Perturbing and Backtracking Based Textual Adversarial Attack",
            "content": [
                {
                    "types": "text",
                    "info": "在自然语言处理（Natural Language Processing，NLP）领域，语言模型被广泛应用于文本分类、机器翻译和逻辑推理等任务中。然而，语言模型缺陷的存在使得其容易受到对抗攻击，造成重大经济损失。通过模拟对抗攻击生成的对抗样本可以有效检测语言模型缺陷，并用于对抗训练来提升模型的鲁棒性。现有方法大多通过先选择待扰动重要单词再对其添加扰动来生成对抗样本。此类方法需要对受攻击的目标模型进行大量查询，在目标模型查询次数受限的场景下并不适用。如何以更高效的方式生成能够引发错误的对抗样本是一个亟待解决的问题。" 
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了基于决策边界扰动回溯的文本对抗攻击（Classification Boundary Adjacent Perturbation and Backtrack based Textual Adversarial Attack，CBAPB），该方法首先在保持样本原始语义不发生改变的条件下，在随机位置粗粒度地添加扰动，直到样本达到相似度阈值。然后对所有对抗成功的样本进行细粒度扰动回溯，来获得扰动幅度尽可能小的对抗样本。" 
                },
                {
                    "types": "image",
                    "info": "CBAPB.png"
                },
                {
                    "types": "text",
                    "info": "本文在Yelp Reviews、AG News和DBpedia数据集上，以BERT为目标模型进行了多次实验。与TextFooler、BERTAttack和CLARE等方法相比，CBAPB需要的平均查询次数仅占上述方法的3.2%，对抗成功率也提高了7.6%，仅有文本相似度小幅下降了1.5%。实验结果表明，CBAPB可以有效地减少目标的模型访问次数，同时提高对抗成功率。" 
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "CBAPB.png"
        },
        {
            "id": "1", 
            "title": "硕士研究生张佳乐在CCF C类国际会议SMC发表最新研究成果——TS-FL: Software Fault Localization Based on Teacher-Student Network",
            "content": [
                {
                    "types": "text",
                    "info": "构建自动化的缺陷定位方法能够加快开发人员定位到复杂软件系统缺陷代码的过程。现有的缺陷定位方法通过结合不同传统缺陷定位方法输出的可疑分数来提升缺陷定位的性能，其中基于变异的缺陷定位方法输出的可疑分数，通常被称为变异特征，被证明能有效提升缺陷定位性能。然而，收集变异特征时需要生成大量变异体并为每个变异体执行测试用例，这需要大量的计算资源和时间，并且部分代码语句由于无法生成变异体，因此不具有变异特征，这将影响缺陷定位性能。" 
                },
                {
                    "types": "text",
                    "info": "为此，本文提出了一种基于师生网络的缺陷定位方法(Teacher and Student network-based Fault Localization, TS-FL)， 首先使用基于BiLSTM的分类器提取代码语句的深层语义特征，并分别将基于频谱和基于变异的缺陷定位方法计算出的可疑分数作为代码语句的频谱特征和变异特征；然后构建师生网络，利用相互学习策略协同训练教师网络与学生网络，使学生网络可以学习教师网络中变异特征的信息从而提高缺陷定位性能；最后，学生网络通过学习代码语句的深层语义特征和频谱特征为每条代码语句计算可疑分数，最终根据可疑分数对代码语句进行降序排序，从而定位缺陷语句。为了评估TS-FL的缺陷定位性能，使用Top'-' N、MAR、MFR等评价指标在Defects4J数据集上进行实验。" 
                },
                {
                    "types": "image",
                    "info": "TS-FL.jpg"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，在不使用变异特征时，对于Top'-' 1指标，与基于频谱的缺陷定位方法Ochiai、Tarantula和DStar相比，TS-FL可分别多定位到36、36和35条缺陷语句；与基于深度学习的缺陷定位方法TRANSFER-FL相比，TS-FL可多定位到8条缺陷语句。" 
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "TS-FL.jpg"
        },
        {
            "id": "2", 
            "title": "硕士研究生杨君在CCF C类国际会议SMC发表最新研究成果——Issue Title Generation: How Far Can Large Language Models Go?",
            "content": [
                {
                    "types": "text",
                    "info": "在开源软件和开源平台中，开发人员通过issue来记录软件故障信息、报告文档缺失或提出新功能需求。标题是issue的必填字段，需简洁准确地概括issue核心内容。然而，由于经验不足、水平有限等原因，开发人员可能难以书写高质量的issue标题。为此，研究人员提出了几种issue标题生成方法来自动生成高质量标题，但生成效果依赖于构建相同项目的数据集用于训练模型。近年来，大语言模型（LLMs）在机器翻译、阅读理解、文本生成等各种通用任务上展现了卓越性能，也为其他生成式任务带来了巨大潜力。" 
                },
                {
                    "types": "text",
                    "info": "在本文中，我们以ChatGPT作为LLMs代表，验证其在issue标题生成任务上的有效性。初步实验发现，直接使用LLMs难以获得令人满意的结果。为此，本文提出一种基于LLMs的issue标题生成方法LBITG，通过案例提示、标签提示等四种提示方式向LLMs提供相关上下文，引导其生成高质量标题，进一步提高LLMs的有效性。" 
                },
                {
                    "types": "image",
                    "info": "LBITG.png"
                },
                {
                    "types": "text",
                    "info": " 实验结果表明，无需训练即可使用的LBITG能够提升LLMs生成标题的质量，在项目内场景下ROUGE、BLEU和METEOR指标相较iTAPE至少提升了111.29%、104.54%和188.48%，并取得了与SOTA方法iTiger相当的性能。此外，LBITG在跨项目场景下取得了最佳表现，在ROUGE-1、BLEU-1、METEOR等指标上相较iTiger分别提升了25.33%、30.14%和27.29%。" 
                },
                {
                    "types": "image",
                    "info": "LBITG-2.jpg"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "LBITG.png"
        },
        {
            "id": "3", 
            "title": "硕士研究生任森林在CCF C类国际会议SMC发表最新研究成果——Combining Deep Learning and Expert Rules for Smart Contract Vulnerability Detection",
            "content": [
                {
                    "types": "text",
                    "info": "智能合约通常持有大量数字资产，一旦存在漏洞就可能造成巨大损失。因此，在智能合约部署前对其中可能存在的漏洞进行充分检测是十分必要的。智能合约中存在多种类型的漏洞，不同检测方法有各自的独特优势，有些漏洞可能更适合专家规则模型进行检测，有些漏洞则更适合深度学习模型进行检测，单一的检测方法通常无法充分发挥其检测漏洞的能力。" 
                },
                {
                    "types": "text",
                    "info": "针对上述问题，我们提出了一种结合深度学习和专家规则的智能合约漏洞检测方法CDE-VD（Combining Deep Learning and Expert Rule for Smart Contract Vulnerability Detection）来进一步提高漏洞检测性能。该方法通过在检测前分类的方式，将智能合约样本分为深度学习倾向样本和专家规则倾向样本，并提取专家规则特征来训练智能合约检测方法分类器（SCDMC），使用训练后的SCDMC来预测待检测样本的类别，再选取适合的方法进行检测。" 
                },
                {
                    "types": "image",
                    "info": "CDE-VD.png"
                },
                {
                    "types": "text",
                    "info": "实验结果表明，CDE-VD的漏洞检测性能优于单一的检测方法，在权限控制、时间戳依赖等五类漏洞的Accuracy、Precision、Recall和F_1值方面相较于SOTA方法MANDO分别取得了3.22%、2.32%、9.25%和6.54%的平均提高，这表明对智能合约样本进行类别预测可以提高漏洞检测性能。" 
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "CDE-VD.png"
        },
        {
            "id": "4", 
            "title": "硕士研究生韩骐鸿在CCF C类国际会议SMC发表最新研究成果——Vulnerability Detection by Sequential Learning of Program Semantics via Graph Attention Networks",
            "content": [
                {
                    "types": "text",
                    "info": "漏洞检测是保护软件系统免受网络攻击的一个重要方面。然而，有些类型的漏洞很难检测，需要从多个角度分析源代码。为此，我们提出了一个通用且易于扩展的框架，即 SGVD（用于漏洞检测的顺序图注意力网络）。" 
                },
                {
                    "types": "text",
                    "info": "SGVD 由一个基于 GAT 学习代码语义表示的顺序模块和一个从多视图源代码中提取有用特征的新型融合预测模块组成。我们在一个包含两个大型开源 C 项目的数据集上对该框架进行了评估。实验结果表明，与现有的最先进的图学习漏洞检测工具 Devign 和 ReGVD 相比，SGVD 性能更好，准确率平均提高了 12.25%，精确度平均提高了 13.65%，F1 分数平均提高了 12.04%，召回率平均提高了 9.14%。 SGVD（用于漏洞检测的顺序图注意力网络）。" 
                },
                {
                    "types": "image",
                    "info": "SGVD.png"
                }
            ],
            "date": "2024年7月11日",
            "graphicAbstract": "SGVD.png"
        },
        {
            "id": "5", 
            "title": "硕士研究生王天阔在CCF C类国际会议SEKE发表最新研究成果（Poster）——From Domain Models to Natural Language Requirement Documents: An Exploration of Requirement Missing Problems",
            "content": [
                {
                    "types": "text",
                    "info": "在软件工程中，精确的需求规格说明至关重要，通常来自容易产生歧义和不一致的自然语言文档。这可能会导致严重的遗漏，进而需要高昂的维护成本。本研究引入了RCADM方法，这是一种结合NLP和领域模型的方法，用于识别软件需求文档中的缺失需求，从而增强抽取。" 
                },
                {
                    "types": "image",
                    "info": "RCADM.png"
                }
            ],
            "date": "2024年7月21日",
            "graphicAbstract": "RCADM.png"
        },
        {
            "id": "6", 
            "title": "硕士研究生王正武在CCF C类国际会议SEKE发表最新研究成果——SDA-FirmFuzz: Fuzz Testing IoT Device Firmwares Based on Seed Differential Analysis",
            "content": [
                {
                    "types": "text",
                    "info": "物联网设备已经被用于我们生活的各个方面，近年来有攻击人员利用其设备固件中存在的漏洞，对设备进行控制并利用，因此确保固件的安全是十分重要的。模糊测试技术是一种软件自动化测试技术，已经在传统软件中挖掘到了大量漏洞。研究人员将模糊测试技术用于固件测试，大幅提升了其漏洞检测效率。现有的固件模糊测试主要关注模糊测试前的固件静态分析、改进仿真工具提高模糊测试的方法通用性和提高仿真吞吐量来提高模糊测试的效率等方面。一般来说，测试用例（种子）的质量会影响模糊测试的结果，高质量的种子可以使得覆盖更多的程序路径并触发崩溃。" 
                },
                {
                    "types": "text",
                    "info": "因此本文提出一种基于种子差异化分析的物联网设备固件模糊测试方法SDA-FirmFuzz（Fuzz Testing of IoT Device Firmware Based on Seed Differential Analysis），通过在模糊测试前对种子队列进行差异化分析，使得差异化程度更高的种子优先被执行。首先通过提取种子字节矩阵，并使用余弦相似度计算方法得到相似度矩阵。之后通过相似度矩阵计算得到权重矩阵，再对相似度矩阵与权重矩阵进行计算，得到种子相似度分数。最后，根据相似度分数对种子队列重新排序，之后将新的种子队列输入物联网设备固件中进行模糊测试。"
                },
                {
                    "types": "image",
                    "info": "SDA-FirmFuzz.png"
                },
                {
                    "types": "text",
                    "info": "为了评估SDA-FirmFuzz的性能，我们在6个物联网设备固件上进行了实验，实验结果表明，SDA-FirmFuzz平均比Firm-AFL能够多覆盖1.26倍的程序路径和多触发32个唯一崩溃。"
                }
            ],
            "date": "2024年7月21日",
            "graphicAbstract": "SDA-FirmFuzz.png"
        },
        {
            "id": "7", 
            "title": "硕士研究生顾锡国在CCF C类国际会议ISPA发表最新研究成果——Detecting smart contract vulnerabilities based on fusing semantic and syntax structure information",
            "content": [
                {
                    "types": "text",
                    "info": "由于智能合约的广泛应用以及其携带的经济价值导致智能合约成为攻击者的攻击目标，智能合约的漏洞造成了重大的经济损失。因此，在智能合约部署前对其中可能存在的漏洞进行充分检测是十分必要的。然而，现有的机器学习的方法忽略节点和边的类型信息，而异构图的方法只表征出了合约的语义信息，而缺乏语法结信息，从而会因特征表征不完整而导致漏洞检测性能下降。" 
                },
                {
                    "types": "text",
                    "info": "针对上述问题，我们提出了一种融合语义及语法结构信息智能合约漏洞检测方法HG-Detector（Heterogeneous Graph, Detector）。该方法通过分析智能合约源代码，并提取异构的抽象语法树（Heterogeneous Abstract Syntax Tree）、控制流图（Heterogeneous Control Flow Graph）和函数调用图（Heterogeneous Function Call Graph），以获取合约的语法和语义信息。通过使用异构图神经网络（Heterogeneous Graph Neural Network），从这些图中学习特征并进行拼接 来综合表征智能合约。最终，将综合特征输入到分类器检测智能合约中的潜在漏洞及其类型。"
                },
                {
                    "types": "image",
                    "info": "HG-Detector.png"
                },
                {
                    "types": "text",
                    "info": "在包含1269个合约的数据集上进行实验的结果表明，相比于MANDO，HG-Detector在7类漏洞上的Accuracy平均提升了4.78%，Precision平均提升了10.06%，Recall平均提升了1.61%，F1平均提升了2.29%。"
                }
            ],
            "date": "2024年8月21日",
            "graphicAbstract": "HG-Detector.png"
        }
    ]
}